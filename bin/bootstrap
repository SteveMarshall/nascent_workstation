#!/usr/bin/env bash

reset="$(tput sgr0)"
 bold="$(tput bold)"
  red="$(tput setaf 1)"

# Configure homedir if needs be
if [[ -d ~/.git ]]; then
  cd
  git pull
else
  cd
  git clone git@github.com:SteveMarshall/homedir.git
  chflags hidden ~/homedir/*
  mv ~/homedir/* ~/homedir/.[^.]* ~
  rm -f ~/homedir
fi
source ~/.bash_profile

# Make sure we own /usr/local unless homebrew's already there
if [[ ! -f /usr/local/bin/brew ]]; then
    sudo -u StevenAdm /usr/bin/ruby -e "$(
        curl -fsSL \
	https://raw.githubusercontent.com/Homebrew/install/master/install
    )"
    sudo chown -R `whoami`:admin \
        /usr/local \
        /Library/Caches/Homebrew
fi

# Install Chef using the Omnibus installer
# Omnibus updater in chef itself will handle updates for us
if [[ ! `which chef-solo` ]]; then
    curl -L https://www.opscode.com/chef/install.sh | sudo bash -s -- -P chefdk
    sudo chflags hidden /opt
fi

# Update/grab all the cookbooks
if [[ -d ~/Development/Personal/nascent_workstation ]]; then
  cd ~/Development/Personal/nascent_workstation && git pull
else
  mkdir -p ~/Development/Personal
  cd ~/Development/Personal && git clone git@github.com:SteveMarshall/nascent_workstation.git
fi

if [[ ! -f nodes/`hostname`.json ]]; then
  echo -e "${bold}${red}No nodefile for this machine (`hostname`).${reset}"
  exit 1
fi

# Bootstrap using Chef
cd ~/Development/Personal/nascent_workstation
rm -f *.lock
berks install

if [[ -f nodes/`hostname`.json ]]; then
  chef-solo -c solo.rb -j nodes/`hostname`.json
fi
